
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.TextField;
import javafx.scene.layout.Pane;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class E6_MessageFX2 extends Application {
	private final String initMsg="Hello, World";
	private final int fontSize = 72;
	private TextField textField;
	private Text message;
	private CheckBox boldBox;
	
	@Override
	public void start(Stage primaryStage) {
		message = new Text(25, 175, initMsg);
		message.setFont(Font.font("Arial",fontSize));
	
		textField = new TextField(initMsg);
		// note that we will get ride of all setLayout statements later
		textField.setLayoutX(10);
		textField.setLayoutY(10);	
		textField.setPrefWidth(300);
		
		Button updateButton = new Button("Update Message");
		updateButton.setLayoutX(460);
		updateButton.setLayoutY(10);

		boldBox = new CheckBox("Bold");
		boldBox.setLayoutX(10);
		boldBox.setLayoutY(60);

		
		MessageEventHandler msgHandler = new MessageEventHandler();
		updateButton.setOnAction(msgHandler); // for the event generated by button click
		textField.setOnAction(msgHandler); // for the event generated by enter/return keywords.
		boldBox.setOnAction(msgHandler);

		Pane root = new Pane();
		root.getChildren().addAll(textField, updateButton, message, boldBox);
		
		Scene scene = new Scene(root, 600, 200);
		primaryStage.setTitle("FX Custom Text Message");
		primaryStage.setScene(scene);
		primaryStage.show();
	}
	
	public static void main(String[] args) {
		Application.launch(args);
	}
		
	private class MessageEventHandler implements EventHandler<ActionEvent> {
		@Override
		// read the content of the text field and update the message
		public void handle(ActionEvent e) {
			message.setText(textField.getText());
			FontWeight fw = FontWeight.NORMAL;
			if (boldBox.isSelected()) {
				fw = FontWeight.BOLD;
			}
			message.setFont(Font.font("Arial",fw,fontSize));
				
		}
	}
}



